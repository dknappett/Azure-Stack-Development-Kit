{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "networkInterfaceName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "availabilitySetName": {
      "type": "string"
    },
    "availabilitySetPlatformFaultDomainCount": {
      "type": "string"
    },
    "availabilitySetPlatformUpdateDomainCount": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string"
    },
    "diagnosticsStorageAccountName": {
      "type": "string"
    },
    "diagnosticsStorageAccountId": {
      "type": "string"
    },
    "diagnosticsStorageAccountType": {
      "type": "string"
    },
    "addressPrefix": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "subnetPrefix": {
      "type": "string"
    },
    "publicIpAddressName": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "sqlConnectivityType": {
      "type": "string"
    },
    "sqlPortNumber": {
      "type": "int"
    },
    "sqlStorageDisksCount": {
      "type": "int"
    },
    "sqlStorageWorkloadType": {
      "type": "string"
    },
    "sqlStorageDisksConfigurationType": {
      "type": "string"
    },
    "sqlStorageStartingDeviceId": {
      "type": "int"
    },
    "sqlStorageDeploymentToken": {
      "type": "int"
    },
    "sqlAutopatchingDayOfWeek": {
      "type": "string"
    },
    "sqlAutopatchingStartHour": {
      "type": "string"
    },
    "sqlAutopatchingWindowDuration": {
      "type": "string"
    },
    "sqlAutobackupRetentionPeriod": {
      "type": "string"
    },
    "sqlAutobackupStorageAccountName": {
      "type": "string"
    },
    "sqlAutobackupStorageAccountType": {
      "type": "string"
    },
    "sqlAuthenticationLogin": {
      "type": "string"
    },
    "sqlAuthenticationPassword": {
      "type": "securestring"
    },
    "rServicesEnabled": {
      "type": "string"
    }
  },
  "variables": {
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "diagnosticsExtensionName": "IaaSDiagnostics"
  },
  "resources": [
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP2-WS2012R2",
            "sku": "Standard",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "vhd": {
              "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '_os.vhd')]"
            },
            "name": "[parameters('virtualMachineName')]"
          },
          "dataDisks": [
            {
              "createOption": "empty",
              "lun": 0,
              "diskSizeGB": "127",
              "caching": "ReadOnly",
              "name": "[concat(parameters('virtualMachineName'), '_disk-1')]",
              "vhd": {
                "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '_disk-1', '.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId(resourceGroup().name,  'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
          }
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        }
      }
    },
    {
      "name": "[concat(parameters('virtualMachineName'),'/', variables('diagnosticsExtensionName'))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Diagnostics",
        "type": "IaaSDiagnostics",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
          "WadCfg": {
            "DiagnosticMonitorConfiguration": {
              "overallQuotaInMB": 5120,
              "Metrics": {
                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
                "MetricAggregation": [
                  {
                    "scheduledTransferPeriod": "PT1H"
                  },
                  {
                    "scheduledTransferPeriod": "PT1M"
                  }
                ]
              },
              "DiagnosticInfrastructureLogs": {
                "scheduledTransferLogLevelFilter": "Error"
              },
              "PerformanceCounters": {
                "scheduledTransferPeriod": "PT1M",
                "PerformanceCounterConfiguration": [
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Thread Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Handle Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\System Up Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Context Switches/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processor Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Available Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Committed Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Cache Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pages/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Page Faults/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                    "sampleRate": "PT1M"
                  }
                ]
              },
              "WindowsEventLog": {
                "scheduledTransferPeriod": "PT1M",
                "DataSource": [
                  {
                    "name": "Application!*[Application[(Level = 1 or Level = 2 or Level = 3)]]"
                  },
                  {
                    "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                  },
                  {
                    "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                  }
                ]
              }
            }
          }
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
          "storageAccountKey": "[listKeys(parameters('diagnosticsStorageAccountId'),'2015-06-15').key1]",
          "storageAccountEndPoint": "https://local.azurestack.external/"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'), '/SqlIaasExtension')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'),'/extensions/', variables('diagnosticsExtensionName'))]"
      ],
      "properties": {
        "type": "SqlIaaSAgent",
        "publisher": "Microsoft.SqlServer.Management",
        "typeHandlerVersion": "1.2",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "AutoTelemetrySettings": {
            "Region": "[parameters('location')]"
          },
          "AutoPatchingSettings": {
            "PatchCategory": "WindowsMandatoryUpdates",
            "Enable": true,
            "DayOfWeek": "[parameters('sqlAutopatchingDayOfWeek')]",
            "MaintenanceWindowStartingHour": "[parameters('sqlAutopatchingStartHour')]",
            "MaintenanceWindowDuration": "[parameters('sqlAutopatchingWindowDuration')]"
          },
          "AutoBackupSettings": {
            "Enable": true,
            "RetentionPeriod": "[parameters('sqlAutobackupRetentionPeriod')]",
            "EnableEncryption": false
          },
          "KeyVaultCredentialSettings": {
            "Enable": false,
            "CredentialName": ""
          },
          "ServerConfigurationsManagementSettings": {
            "SQLConnectivityUpdateSettings": {
              "ConnectivityType": "[parameters('sqlConnectivityType')]",
              "Port": "[parameters('sqlPortNumber')]"
            },
            "SQLWorkloadTypeUpdateSettings": {
              "SQLWorkloadType": "[parameters('sqlStorageWorkloadType')]"
            },
            "SQLStorageUpdateSettings": {
              "DiskCount": "[parameters('sqlStorageDisksCount')]",
              "NumberOfColumns": "[parameters('sqlStorageDisksCount')]",
              "StartingDeviceID": "[parameters('sqlStorageStartingDeviceId')]",
              "DiskConfigurationType": "[parameters('sqlStorageDisksConfigurationType')]"
            },
            "AdditionalFeaturesServerConfigurations": {
              "IsRServicesEnabled": "[parameters('rServicesEnabled')]"
            }
          }
        },
        "protectedSettings": {
          "StorageUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('sqlAutobackupStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]",
          "StorageAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('sqlAutobackupStorageAccountName')), '2015-06-15').key1]",
          "SQLAuthUpdateUserName": "[parameters('sqlAuthenticationLogin')]",
          "SQLAuthUpdatePassword": "[parameters('sqlAuthenticationPassword')]"
        }
      }
    },
    {
      "name": "[parameters('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]"
      }
    },
    {
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[parameters('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('diagnosticsStorageAccountType')]"
      }
    },
    {
      "name": "[parameters('sqlAutobackupStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('sqlAutobackupStorageAccountType')]"
      }
    },
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name,  'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      }
    },
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SQL",
            "properties": {
              "priority": 100,
              "sourceAddressPrefix": "*",
              "protocol": "*",
              "destinationPortRange": "1433",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-sql",
            "properties": {
              "priority": 1500,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "1433",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}
